// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: growth/huangli/huangli.proto

package huangli

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//======================== 查询最近节假日-列表 ========================
type GetHolidayListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YearMonth string `protobuf:"bytes,1,opt,name=year_month,json=yearMonth,proto3" json:"year_month,omitempty"` //2021-1
}

func (x *GetHolidayListRequest) Reset() {
	*x = GetHolidayListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHolidayListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHolidayListRequest) ProtoMessage() {}

func (x *GetHolidayListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHolidayListRequest.ProtoReflect.Descriptor instead.
func (*GetHolidayListRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{0}
}

func (x *GetHolidayListRequest) GetYearMonth() string {
	if x != nil {
		return x.YearMonth
	}
	return ""
}

type GetHolidayListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*HolidayInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHolidayListResponse) Reset() {
	*x = GetHolidayListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHolidayListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHolidayListResponse) ProtoMessage() {}

func (x *GetHolidayListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHolidayListResponse.ProtoReflect.Descriptor instead.
func (*GetHolidayListResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{1}
}

func (x *GetHolidayListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHolidayListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHolidayListResponse) GetData() []*HolidayInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type HolidayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HolidayInfo) Reset() {
	*x = HolidayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HolidayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolidayInfo) ProtoMessage() {}

func (x *HolidayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolidayInfo.ProtoReflect.Descriptor instead.
func (*HolidayInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{2}
}

func (x *HolidayInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *HolidayInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

//======================== 历史上的今天-详情 ========================
type GetHistoryInfoByEIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EId string `protobuf:"bytes,1,opt,name=e_id,json=eId,proto3" json:"e_id,omitempty"`
}

func (x *GetHistoryInfoByEIDRequest) Reset() {
	*x = GetHistoryInfoByEIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryInfoByEIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryInfoByEIDRequest) ProtoMessage() {}

func (x *GetHistoryInfoByEIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryInfoByEIDRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryInfoByEIDRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{3}
}

func (x *GetHistoryInfoByEIDRequest) GetEId() string {
	if x != nil {
		return x.EId
	}
	return ""
}

type GetHistoryInfoByEIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*HistoryInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHistoryInfoByEIDResponse) Reset() {
	*x = GetHistoryInfoByEIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryInfoByEIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryInfoByEIDResponse) ProtoMessage() {}

func (x *GetHistoryInfoByEIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryInfoByEIDResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryInfoByEIDResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{4}
}

func (x *GetHistoryInfoByEIDResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHistoryInfoByEIDResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHistoryInfoByEIDResponse) GetData() []*HistoryInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EId     string `protobuf:"bytes,1,opt,name=e_id,json=eId,proto3" json:"e_id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *HistoryInfo) Reset() {
	*x = HistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryInfo) ProtoMessage() {}

func (x *HistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryInfo.ProtoReflect.Descriptor instead.
func (*HistoryInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{5}
}

func (x *HistoryInfo) GetEId() string {
	if x != nil {
		return x.EId
	}
	return ""
}

func (x *HistoryInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HistoryInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

//======================== 历史上的今天-列表 ========================
type GetHistoryByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetHistoryByDateRequest) Reset() {
	*x = GetHistoryByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryByDateRequest) ProtoMessage() {}

func (x *GetHistoryByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryByDateRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryByDateRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{6}
}

func (x *GetHistoryByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetHistoryByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*HistoryList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHistoryByDateResponse) Reset() {
	*x = GetHistoryByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryByDateResponse) ProtoMessage() {}

func (x *GetHistoryByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryByDateResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryByDateResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{7}
}

func (x *GetHistoryByDateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHistoryByDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHistoryByDateResponse) GetData() []*HistoryList {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day   string `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	Date  string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	EId   string `protobuf:"bytes,4,opt,name=e_id,json=eId,proto3" json:"e_id,omitempty"`
}

func (x *HistoryList) Reset() {
	*x = HistoryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryList) ProtoMessage() {}

func (x *HistoryList) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryList.ProtoReflect.Descriptor instead.
func (*HistoryList) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{8}
}

func (x *HistoryList) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *HistoryList) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *HistoryList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HistoryList) GetEId() string {
	if x != nil {
		return x.EId
	}
	return ""
}

//======================== 公共结构体 ========================
// 万年历详情
type CalendarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimalsYear string `protobuf:"bytes,1,opt,name=animals_year,json=animalsYear,proto3" json:"animals_year,omitempty"`
	Suit        string `protobuf:"bytes,2,opt,name=suit,proto3" json:"suit,omitempty"`
	Avoid       string `protobuf:"bytes,3,opt,name=avoid,proto3" json:"avoid,omitempty"`
	Lunar       string `protobuf:"bytes,4,opt,name=lunar,proto3" json:"lunar,omitempty"`
	LunarYear   string `protobuf:"bytes,5,opt,name=lunar_year,json=lunarYear,proto3" json:"lunar_year,omitempty"`
	Weekday     string `protobuf:"bytes,6,opt,name=weekday,proto3" json:"weekday,omitempty"`
	YearMonth   string `protobuf:"bytes,7,opt,name=year_month,json=yearMonth,proto3" json:"year_month,omitempty"`
}

func (x *CalendarInfo) Reset() {
	*x = CalendarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalendarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarInfo) ProtoMessage() {}

func (x *CalendarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarInfo.ProtoReflect.Descriptor instead.
func (*CalendarInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{9}
}

func (x *CalendarInfo) GetAnimalsYear() string {
	if x != nil {
		return x.AnimalsYear
	}
	return ""
}

func (x *CalendarInfo) GetSuit() string {
	if x != nil {
		return x.Suit
	}
	return ""
}

func (x *CalendarInfo) GetAvoid() string {
	if x != nil {
		return x.Avoid
	}
	return ""
}

func (x *CalendarInfo) GetLunar() string {
	if x != nil {
		return x.Lunar
	}
	return ""
}

func (x *CalendarInfo) GetLunarYear() string {
	if x != nil {
		return x.LunarYear
	}
	return ""
}

func (x *CalendarInfo) GetWeekday() string {
	if x != nil {
		return x.Weekday
	}
	return ""
}

func (x *CalendarInfo) GetYearMonth() string {
	if x != nil {
		return x.YearMonth
	}
	return ""
}

// 老黄历详情
type YellowCalendarDayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Yangli    string   `protobuf:"bytes,2,opt,name=yangli,proto3" json:"yangli,omitempty"`
	Yinli     string   `protobuf:"bytes,3,opt,name=yinli,proto3" json:"yinli,omitempty"`
	Wuxing    string   `protobuf:"bytes,4,opt,name=wuxing,proto3" json:"wuxing,omitempty"`
	Chongsha  string   `protobuf:"bytes,5,opt,name=chongsha,proto3" json:"chongsha,omitempty"`
	Baiji     string   `protobuf:"bytes,6,opt,name=baiji,proto3" json:"baiji,omitempty"`
	Jishen    []string `protobuf:"bytes,7,rep,name=jishen,proto3" json:"jishen,omitempty"`
	Yi        []string `protobuf:"bytes,8,rep,name=yi,proto3" json:"yi,omitempty"`
	Xiongshen []string `protobuf:"bytes,9,rep,name=xiongshen,proto3" json:"xiongshen,omitempty"`
	Ji        []string `protobuf:"bytes,10,rep,name=ji,proto3" json:"ji,omitempty"`
}

func (x *YellowCalendarDayInfo) Reset() {
	*x = YellowCalendarDayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YellowCalendarDayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YellowCalendarDayInfo) ProtoMessage() {}

func (x *YellowCalendarDayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YellowCalendarDayInfo.ProtoReflect.Descriptor instead.
func (*YellowCalendarDayInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{10}
}

func (x *YellowCalendarDayInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *YellowCalendarDayInfo) GetYangli() string {
	if x != nil {
		return x.Yangli
	}
	return ""
}

func (x *YellowCalendarDayInfo) GetYinli() string {
	if x != nil {
		return x.Yinli
	}
	return ""
}

func (x *YellowCalendarDayInfo) GetWuxing() string {
	if x != nil {
		return x.Wuxing
	}
	return ""
}

func (x *YellowCalendarDayInfo) GetChongsha() string {
	if x != nil {
		return x.Chongsha
	}
	return ""
}

func (x *YellowCalendarDayInfo) GetBaiji() string {
	if x != nil {
		return x.Baiji
	}
	return ""
}

func (x *YellowCalendarDayInfo) GetJishen() []string {
	if x != nil {
		return x.Jishen
	}
	return nil
}

func (x *YellowCalendarDayInfo) GetYi() []string {
	if x != nil {
		return x.Yi
	}
	return nil
}

func (x *YellowCalendarDayInfo) GetXiongshen() []string {
	if x != nil {
		return x.Xiongshen
	}
	return nil
}

func (x *YellowCalendarDayInfo) GetJi() []string {
	if x != nil {
		return x.Ji
	}
	return nil
}

// 老黄历-时辰详情
type YellowCalendarHourInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yangli string   `protobuf:"bytes,1,opt,name=yangli,proto3" json:"yangli,omitempty"`
	Hours  string   `protobuf:"bytes,2,opt,name=hours,proto3" json:"hours,omitempty"`
	Des    string   `protobuf:"bytes,3,opt,name=des,proto3" json:"des,omitempty"`
	Yi     []string `protobuf:"bytes,4,rep,name=yi,proto3" json:"yi,omitempty"`
	Ji     []string `protobuf:"bytes,5,rep,name=ji,proto3" json:"ji,omitempty"`
}

func (x *YellowCalendarHourInfo) Reset() {
	*x = YellowCalendarHourInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YellowCalendarHourInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YellowCalendarHourInfo) ProtoMessage() {}

func (x *YellowCalendarHourInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YellowCalendarHourInfo.ProtoReflect.Descriptor instead.
func (*YellowCalendarHourInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{11}
}

func (x *YellowCalendarHourInfo) GetYangli() string {
	if x != nil {
		return x.Yangli
	}
	return ""
}

func (x *YellowCalendarHourInfo) GetHours() string {
	if x != nil {
		return x.Hours
	}
	return ""
}

func (x *YellowCalendarHourInfo) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *YellowCalendarHourInfo) GetYi() []string {
	if x != nil {
		return x.Yi
	}
	return nil
}

func (x *YellowCalendarHourInfo) GetJi() []string {
	if x != nil {
		return x.Ji
	}
	return nil
}

//======================== 查询某天的黄历 ========================
type GetHuangLiByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetHuangLiByDateRequest) Reset() {
	*x = GetHuangLiByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiByDateRequest) ProtoMessage() {}

func (x *GetHuangLiByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiByDateRequest.ProtoReflect.Descriptor instead.
func (*GetHuangLiByDateRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{12}
}

func (x *GetHuangLiByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetHuangLiByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SomeDayHuangLiInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHuangLiByDateResponse) Reset() {
	*x = GetHuangLiByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiByDateResponse) ProtoMessage() {}

func (x *GetHuangLiByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiByDateResponse.ProtoReflect.Descriptor instead.
func (*GetHuangLiByDateResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{13}
}

func (x *GetHuangLiByDateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHuangLiByDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHuangLiByDateResponse) GetData() *SomeDayHuangLiInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SomeDayHuangLiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calendar           *CalendarInfo             `protobuf:"bytes,1,opt,name=calendar,proto3" json:"calendar,omitempty"`
	YellowCalendarDay  *YellowCalendarDayInfo    `protobuf:"bytes,2,opt,name=yellow_calendar_day,json=yellowCalendarDay,proto3" json:"yellow_calendar_day,omitempty"`
	YellowCalendarHour []*YellowCalendarHourInfo `protobuf:"bytes,3,rep,name=yellow_calendar_hour,json=yellowCalendarHour,proto3" json:"yellow_calendar_hour,omitempty"`
	Timestamp          int64                     `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TemplateContent    string                    `protobuf:"bytes,5,opt,name=template_content,json=templateContent,proto3" json:"template_content,omitempty"`
}

func (x *SomeDayHuangLiInfo) Reset() {
	*x = SomeDayHuangLiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SomeDayHuangLiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SomeDayHuangLiInfo) ProtoMessage() {}

func (x *SomeDayHuangLiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SomeDayHuangLiInfo.ProtoReflect.Descriptor instead.
func (*SomeDayHuangLiInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{14}
}

func (x *SomeDayHuangLiInfo) GetCalendar() *CalendarInfo {
	if x != nil {
		return x.Calendar
	}
	return nil
}

func (x *SomeDayHuangLiInfo) GetYellowCalendarDay() *YellowCalendarDayInfo {
	if x != nil {
		return x.YellowCalendarDay
	}
	return nil
}

func (x *SomeDayHuangLiInfo) GetYellowCalendarHour() []*YellowCalendarHourInfo {
	if x != nil {
		return x.YellowCalendarHour
	}
	return nil
}

func (x *SomeDayHuangLiInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SomeDayHuangLiInfo) GetTemplateContent() string {
	if x != nil {
		return x.TemplateContent
	}
	return ""
}

//======================== 获取某天下的黄历时间列表 ========================
type GetHuangLiHoursByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetHuangLiHoursByDateRequest) Reset() {
	*x = GetHuangLiHoursByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiHoursByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiHoursByDateRequest) ProtoMessage() {}

func (x *GetHuangLiHoursByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiHoursByDateRequest.ProtoReflect.Descriptor instead.
func (*GetHuangLiHoursByDateRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{15}
}

func (x *GetHuangLiHoursByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetHuangLiHoursByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*YellowCalendarHourInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHuangLiHoursByDateResponse) Reset() {
	*x = GetHuangLiHoursByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiHoursByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiHoursByDateResponse) ProtoMessage() {}

func (x *GetHuangLiHoursByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiHoursByDateResponse.ProtoReflect.Descriptor instead.
func (*GetHuangLiHoursByDateResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{16}
}

func (x *GetHuangLiHoursByDateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHuangLiHoursByDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHuangLiHoursByDateResponse) GetData() []*YellowCalendarHourInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

//======================== 获取某天的黄历图片 ========================
type GetHuangLiPicByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	AppCode     string                 `protobuf:"bytes,2,opt,name=app_code,json=appCode,proto3" json:"app_code,omitempty"`
	AccessToken string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetHuangLiPicByDateRequest) Reset() {
	*x = GetHuangLiPicByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiPicByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiPicByDateRequest) ProtoMessage() {}

func (x *GetHuangLiPicByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiPicByDateRequest.ProtoReflect.Descriptor instead.
func (*GetHuangLiPicByDateRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{17}
}

func (x *GetHuangLiPicByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetHuangLiPicByDateRequest) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *GetHuangLiPicByDateRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetHuangLiPicByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetHuangLiPicByDateInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHuangLiPicByDateResponse) Reset() {
	*x = GetHuangLiPicByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiPicByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiPicByDateResponse) ProtoMessage() {}

func (x *GetHuangLiPicByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiPicByDateResponse.ProtoReflect.Descriptor instead.
func (*GetHuangLiPicByDateResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{18}
}

func (x *GetHuangLiPicByDateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHuangLiPicByDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHuangLiPicByDateResponse) GetData() *GetHuangLiPicByDateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHuangLiPicByDateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaID string `protobuf:"bytes,1,opt,name=mediaID,proto3" json:"mediaID,omitempty"`
}

func (x *GetHuangLiPicByDateInfo) Reset() {
	*x = GetHuangLiPicByDateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuangLiPicByDateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuangLiPicByDateInfo) ProtoMessage() {}

func (x *GetHuangLiPicByDateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuangLiPicByDateInfo.ProtoReflect.Descriptor instead.
func (*GetHuangLiPicByDateInfo) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{19}
}

func (x *GetHuangLiPicByDateInfo) GetMediaID() string {
	if x != nil {
		return x.MediaID
	}
	return ""
}

//======================== 获取某天的老黄历 ========================
type GetYellowHuangLiByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetYellowHuangLiByDateRequest) Reset() {
	*x = GetYellowHuangLiByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYellowHuangLiByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYellowHuangLiByDateRequest) ProtoMessage() {}

func (x *GetYellowHuangLiByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYellowHuangLiByDateRequest.ProtoReflect.Descriptor instead.
func (*GetYellowHuangLiByDateRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{20}
}

func (x *GetYellowHuangLiByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetYellowHuangLiByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *YellowCalendarDayInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetYellowHuangLiByDateResponse) Reset() {
	*x = GetYellowHuangLiByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYellowHuangLiByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYellowHuangLiByDateResponse) ProtoMessage() {}

func (x *GetYellowHuangLiByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYellowHuangLiByDateResponse.ProtoReflect.Descriptor instead.
func (*GetYellowHuangLiByDateResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{21}
}

func (x *GetYellowHuangLiByDateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetYellowHuangLiByDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetYellowHuangLiByDateResponse) GetData() *YellowCalendarDayInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

//======================== 获取某天的万年历 ========================
type GetYellowCalendarByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetYellowCalendarByDateRequest) Reset() {
	*x = GetYellowCalendarByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYellowCalendarByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYellowCalendarByDateRequest) ProtoMessage() {}

func (x *GetYellowCalendarByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYellowCalendarByDateRequest.ProtoReflect.Descriptor instead.
func (*GetYellowCalendarByDateRequest) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{22}
}

func (x *GetYellowCalendarByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetYellowCalendarByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CalendarInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetYellowCalendarByDateResponse) Reset() {
	*x = GetYellowCalendarByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_huangli_huangli_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYellowCalendarByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYellowCalendarByDateResponse) ProtoMessage() {}

func (x *GetYellowCalendarByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_huangli_huangli_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYellowCalendarByDateResponse.ProtoReflect.Descriptor instead.
func (*GetYellowCalendarByDateResponse) Descriptor() ([]byte, []int) {
	return file_growth_huangli_huangli_proto_rawDescGZIP(), []int{23}
}

func (x *GetYellowCalendarByDateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetYellowCalendarByDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetYellowCalendarByDateResponse) GetData() *CalendarInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_growth_huangli_huangli_proto protoreflect.FileDescriptor

var file_growth_huangli_huangli_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2f, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69,
	0x2f, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x79, 0x65, 0x61, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x66, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x0b, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x2f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x45, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x0a,
	0x04, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x49, 0x64,
	0x22, 0x6b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x45, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a,
	0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x0a, 0x04,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x11, 0x0a, 0x04, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x59, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x75, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x76,
	0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x76, 0x6f, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x75, 0x6e, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x75, 0x6e, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x75, 0x6e, 0x61, 0x72, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x75, 0x6e, 0x61,
	0x72, 0x59, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x79, 0x65, 0x61, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0xf5,
	0x01, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x79, 0x61, 0x6e, 0x67,
	0x6c, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x79, 0x61, 0x6e, 0x67, 0x6c, 0x69,
	0x12, 0x14, 0x0a, 0x05, 0x79, 0x69, 0x6e, 0x6c, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x79, 0x69, 0x6e, 0x6c, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x75, 0x78, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x75, 0x78, 0x69, 0x6e, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x73, 0x68, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x73, 0x68, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61,
	0x69, 0x6a, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x69, 0x6a, 0x69,
	0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x73, 0x68, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x6a, 0x69, 0x73, 0x68, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x69, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x79, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x78, 0x69, 0x6f, 0x6e,
	0x67, 0x73, 0x68, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x78, 0x69, 0x6f,
	0x6e, 0x67, 0x73, 0x68, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x69, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x02, 0x6a, 0x69, 0x22, 0x78, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x79, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x79, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x79, 0x69, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x79, 0x69,
	0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x69, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x6a, 0x69,
	0x22, 0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x79, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x4c, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xad, 0x02, 0x0a,
	0x12, 0x53, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x79, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x12, 0x4c, 0x0a, 0x13, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x11, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x44,
	0x61, 0x79, 0x12, 0x4f, 0x0a, 0x14, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x48,
	0x6f, 0x75, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x77, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c,
	0x69, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x44, 0x22, 0x4f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x78, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x44,
	0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x70,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0xd6, 0x08, 0x0a, 0x07, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x12, 0x7c, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c,
	0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c,
	0x69, 0x2f, 0x67, 0x65, 0x74, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x50, 0x69, 0x63, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12,
	0x98, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x2f,
	0x67, 0x65, 0x74, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x7c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x49, 0x44,
	0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x49, 0x44,
	0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x0f, 0x5a, 0x0d, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x6c, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_growth_huangli_huangli_proto_rawDescOnce sync.Once
	file_growth_huangli_huangli_proto_rawDescData = file_growth_huangli_huangli_proto_rawDesc
)

func file_growth_huangli_huangli_proto_rawDescGZIP() []byte {
	file_growth_huangli_huangli_proto_rawDescOnce.Do(func() {
		file_growth_huangli_huangli_proto_rawDescData = protoimpl.X.CompressGZIP(file_growth_huangli_huangli_proto_rawDescData)
	})
	return file_growth_huangli_huangli_proto_rawDescData
}

var file_growth_huangli_huangli_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_growth_huangli_huangli_proto_goTypes = []interface{}{
	(*GetHolidayListRequest)(nil),           // 0: proto.GetHolidayListRequest
	(*GetHolidayListResponse)(nil),          // 1: proto.GetHolidayListResponse
	(*HolidayInfo)(nil),                     // 2: proto.HolidayInfo
	(*GetHistoryInfoByEIDRequest)(nil),      // 3: proto.GetHistoryInfoByEIDRequest
	(*GetHistoryInfoByEIDResponse)(nil),     // 4: proto.GetHistoryInfoByEIDResponse
	(*HistoryInfo)(nil),                     // 5: proto.HistoryInfo
	(*GetHistoryByDateRequest)(nil),         // 6: proto.GetHistoryByDateRequest
	(*GetHistoryByDateResponse)(nil),        // 7: proto.GetHistoryByDateResponse
	(*HistoryList)(nil),                     // 8: proto.HistoryList
	(*CalendarInfo)(nil),                    // 9: proto.CalendarInfo
	(*YellowCalendarDayInfo)(nil),           // 10: proto.YellowCalendarDayInfo
	(*YellowCalendarHourInfo)(nil),          // 11: proto.YellowCalendarHourInfo
	(*GetHuangLiByDateRequest)(nil),         // 12: proto.GetHuangLiByDateRequest
	(*GetHuangLiByDateResponse)(nil),        // 13: proto.GetHuangLiByDateResponse
	(*SomeDayHuangLiInfo)(nil),              // 14: proto.SomeDayHuangLiInfo
	(*GetHuangLiHoursByDateRequest)(nil),    // 15: proto.GetHuangLiHoursByDateRequest
	(*GetHuangLiHoursByDateResponse)(nil),   // 16: proto.GetHuangLiHoursByDateResponse
	(*GetHuangLiPicByDateRequest)(nil),      // 17: proto.GetHuangLiPicByDateRequest
	(*GetHuangLiPicByDateResponse)(nil),     // 18: proto.GetHuangLiPicByDateResponse
	(*GetHuangLiPicByDateInfo)(nil),         // 19: proto.GetHuangLiPicByDateInfo
	(*GetYellowHuangLiByDateRequest)(nil),   // 20: proto.GetYellowHuangLiByDateRequest
	(*GetYellowHuangLiByDateResponse)(nil),  // 21: proto.GetYellowHuangLiByDateResponse
	(*GetYellowCalendarByDateRequest)(nil),  // 22: proto.GetYellowCalendarByDateRequest
	(*GetYellowCalendarByDateResponse)(nil), // 23: proto.GetYellowCalendarByDateResponse
	(*timestamppb.Timestamp)(nil),           // 24: google.protobuf.Timestamp
}
var file_growth_huangli_huangli_proto_depIdxs = []int32{
	2,  // 0: proto.GetHolidayListResponse.data:type_name -> proto.HolidayInfo
	5,  // 1: proto.GetHistoryInfoByEIDResponse.data:type_name -> proto.HistoryInfo
	24, // 2: proto.GetHistoryByDateRequest.date:type_name -> google.protobuf.Timestamp
	8,  // 3: proto.GetHistoryByDateResponse.data:type_name -> proto.HistoryList
	24, // 4: proto.GetHuangLiByDateRequest.date:type_name -> google.protobuf.Timestamp
	14, // 5: proto.GetHuangLiByDateResponse.data:type_name -> proto.SomeDayHuangLiInfo
	9,  // 6: proto.SomeDayHuangLiInfo.calendar:type_name -> proto.CalendarInfo
	10, // 7: proto.SomeDayHuangLiInfo.yellow_calendar_day:type_name -> proto.YellowCalendarDayInfo
	11, // 8: proto.SomeDayHuangLiInfo.yellow_calendar_hour:type_name -> proto.YellowCalendarHourInfo
	24, // 9: proto.GetHuangLiHoursByDateRequest.date:type_name -> google.protobuf.Timestamp
	11, // 10: proto.GetHuangLiHoursByDateResponse.data:type_name -> proto.YellowCalendarHourInfo
	24, // 11: proto.GetHuangLiPicByDateRequest.date:type_name -> google.protobuf.Timestamp
	19, // 12: proto.GetHuangLiPicByDateResponse.data:type_name -> proto.GetHuangLiPicByDateInfo
	24, // 13: proto.GetYellowHuangLiByDateRequest.date:type_name -> google.protobuf.Timestamp
	10, // 14: proto.GetYellowHuangLiByDateResponse.data:type_name -> proto.YellowCalendarDayInfo
	24, // 15: proto.GetYellowCalendarByDateRequest.date:type_name -> google.protobuf.Timestamp
	9,  // 16: proto.GetYellowCalendarByDateResponse.data:type_name -> proto.CalendarInfo
	12, // 17: proto.HuangLi.GetHuangLiByDate:input_type -> proto.GetHuangLiByDateRequest
	15, // 18: proto.HuangLi.GetHuangLiHoursByDate:input_type -> proto.GetHuangLiHoursByDateRequest
	17, // 19: proto.HuangLi.GetHuangLiPicByDate:input_type -> proto.GetHuangLiPicByDateRequest
	20, // 20: proto.HuangLi.GetYellowHuangLiByDate:input_type -> proto.GetYellowHuangLiByDateRequest
	22, // 21: proto.HuangLi.GetYellowCalendarByDate:input_type -> proto.GetYellowCalendarByDateRequest
	6,  // 22: proto.HuangLi.GetHistoryByDate:input_type -> proto.GetHistoryByDateRequest
	3,  // 23: proto.HuangLi.GetHistoryInfoByEID:input_type -> proto.GetHistoryInfoByEIDRequest
	0,  // 24: proto.HuangLi.GetHolidayList:input_type -> proto.GetHolidayListRequest
	13, // 25: proto.HuangLi.GetHuangLiByDate:output_type -> proto.GetHuangLiByDateResponse
	16, // 26: proto.HuangLi.GetHuangLiHoursByDate:output_type -> proto.GetHuangLiHoursByDateResponse
	18, // 27: proto.HuangLi.GetHuangLiPicByDate:output_type -> proto.GetHuangLiPicByDateResponse
	21, // 28: proto.HuangLi.GetYellowHuangLiByDate:output_type -> proto.GetYellowHuangLiByDateResponse
	23, // 29: proto.HuangLi.GetYellowCalendarByDate:output_type -> proto.GetYellowCalendarByDateResponse
	7,  // 30: proto.HuangLi.GetHistoryByDate:output_type -> proto.GetHistoryByDateResponse
	4,  // 31: proto.HuangLi.GetHistoryInfoByEID:output_type -> proto.GetHistoryInfoByEIDResponse
	1,  // 32: proto.HuangLi.GetHolidayList:output_type -> proto.GetHolidayListResponse
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_growth_huangli_huangli_proto_init() }
func file_growth_huangli_huangli_proto_init() {
	if File_growth_huangli_huangli_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_growth_huangli_huangli_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHolidayListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHolidayListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HolidayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryInfoByEIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryInfoByEIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalendarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YellowCalendarDayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YellowCalendarHourInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SomeDayHuangLiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiHoursByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiHoursByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiPicByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiPicByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuangLiPicByDateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYellowHuangLiByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYellowHuangLiByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYellowCalendarByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_huangli_huangli_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYellowCalendarByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_growth_huangli_huangli_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_growth_huangli_huangli_proto_goTypes,
		DependencyIndexes: file_growth_huangli_huangli_proto_depIdxs,
		MessageInfos:      file_growth_huangli_huangli_proto_msgTypes,
	}.Build()
	File_growth_huangli_huangli_proto = out.File
	file_growth_huangli_huangli_proto_rawDesc = nil
	file_growth_huangli_huangli_proto_goTypes = nil
	file_growth_huangli_huangli_proto_depIdxs = nil
}
