// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: growth/constellation/constellation.proto

package constellation

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//======================== 查询星座配对 ========================
type GetXZPDPicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManConsName   string `protobuf:"bytes,1,opt,name=man_cons_name,json=manConsName,proto3" json:"man_cons_name,omitempty"`
	WomanConsName string `protobuf:"bytes,2,opt,name=woman_cons_name,json=womanConsName,proto3" json:"woman_cons_name,omitempty"`
	AppCode       string `protobuf:"bytes,3,opt,name=app_code,json=appCode,proto3" json:"app_code,omitempty"`
	AccessToken   string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetXZPDPicReq) Reset() {
	*x = GetXZPDPicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetXZPDPicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetXZPDPicReq) ProtoMessage() {}

func (x *GetXZPDPicReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetXZPDPicReq.ProtoReflect.Descriptor instead.
func (*GetXZPDPicReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{0}
}

func (x *GetXZPDPicReq) GetManConsName() string {
	if x != nil {
		return x.ManConsName
	}
	return ""
}

func (x *GetXZPDPicReq) GetWomanConsName() string {
	if x != nil {
		return x.WomanConsName
	}
	return ""
}

func (x *GetXZPDPicReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *GetXZPDPicReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetXZPDPicRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *XZPDPicInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetXZPDPicRes) Reset() {
	*x = GetXZPDPicRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetXZPDPicRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetXZPDPicRes) ProtoMessage() {}

func (x *GetXZPDPicRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetXZPDPicRes.ProtoReflect.Descriptor instead.
func (*GetXZPDPicRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{1}
}

func (x *GetXZPDPicRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetXZPDPicRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetXZPDPicRes) GetData() *XZPDPicInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type XZPDPicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaID string `protobuf:"bytes,1,opt,name=mediaID,proto3" json:"mediaID,omitempty"`
}

func (x *XZPDPicInfo) Reset() {
	*x = XZPDPicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XZPDPicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XZPDPicInfo) ProtoMessage() {}

func (x *XZPDPicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XZPDPicInfo.ProtoReflect.Descriptor instead.
func (*XZPDPicInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{2}
}

func (x *XZPDPicInfo) GetMediaID() string {
	if x != nil {
		return x.MediaID
	}
	return ""
}

//======================== 查询星座配对 ========================
type GetXZPDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManConsName   string `protobuf:"bytes,1,opt,name=man_cons_name,json=manConsName,proto3" json:"man_cons_name,omitempty"`
	WomanConsName string `protobuf:"bytes,2,opt,name=woman_cons_name,json=womanConsName,proto3" json:"woman_cons_name,omitempty"`
}

func (x *GetXZPDReq) Reset() {
	*x = GetXZPDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetXZPDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetXZPDReq) ProtoMessage() {}

func (x *GetXZPDReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetXZPDReq.ProtoReflect.Descriptor instead.
func (*GetXZPDReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{3}
}

func (x *GetXZPDReq) GetManConsName() string {
	if x != nil {
		return x.ManConsName
	}
	return ""
}

func (x *GetXZPDReq) GetWomanConsName() string {
	if x != nil {
		return x.WomanConsName
	}
	return ""
}

type GetXZPDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *XZPDInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetXZPDRes) Reset() {
	*x = GetXZPDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetXZPDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetXZPDRes) ProtoMessage() {}

func (x *GetXZPDRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetXZPDRes.ProtoReflect.Descriptor instead.
func (*GetXZPDRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{4}
}

func (x *GetXZPDRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetXZPDRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetXZPDRes) GetData() *XZPDInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type XZPDInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Men      string `protobuf:"bytes,1,opt,name=men,proto3" json:"men,omitempty"`
	Women    string `protobuf:"bytes,2,opt,name=women,proto3" json:"women,omitempty"`
	Zhishu   string `protobuf:"bytes,3,opt,name=zhishu,proto3" json:"zhishu,omitempty"`
	Bizhong  string `protobuf:"bytes,4,opt,name=bizhong,proto3" json:"bizhong,omitempty"`
	Xiangyue string `protobuf:"bytes,5,opt,name=xiangyue,proto3" json:"xiangyue,omitempty"`
	Tcdj     string `protobuf:"bytes,6,opt,name=tcdj,proto3" json:"tcdj,omitempty"`
	Jieguo   string `protobuf:"bytes,7,opt,name=jieguo,proto3" json:"jieguo,omitempty"`
	Lianai   string `protobuf:"bytes,8,opt,name=lianai,proto3" json:"lianai,omitempty"`
	Zhuyi    string `protobuf:"bytes,9,opt,name=zhuyi,proto3" json:"zhuyi,omitempty"`
}

func (x *XZPDInfo) Reset() {
	*x = XZPDInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XZPDInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XZPDInfo) ProtoMessage() {}

func (x *XZPDInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XZPDInfo.ProtoReflect.Descriptor instead.
func (*XZPDInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{5}
}

func (x *XZPDInfo) GetMen() string {
	if x != nil {
		return x.Men
	}
	return ""
}

func (x *XZPDInfo) GetWomen() string {
	if x != nil {
		return x.Women
	}
	return ""
}

func (x *XZPDInfo) GetZhishu() string {
	if x != nil {
		return x.Zhishu
	}
	return ""
}

func (x *XZPDInfo) GetBizhong() string {
	if x != nil {
		return x.Bizhong
	}
	return ""
}

func (x *XZPDInfo) GetXiangyue() string {
	if x != nil {
		return x.Xiangyue
	}
	return ""
}

func (x *XZPDInfo) GetTcdj() string {
	if x != nil {
		return x.Tcdj
	}
	return ""
}

func (x *XZPDInfo) GetJieguo() string {
	if x != nil {
		return x.Jieguo
	}
	return ""
}

func (x *XZPDInfo) GetLianai() string {
	if x != nil {
		return x.Lianai
	}
	return ""
}

func (x *XZPDInfo) GetZhuyi() string {
	if x != nil {
		return x.Zhuyi
	}
	return ""
}

//======================== 查询某天的运势 ========================
type GetByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetByDateReq) Reset() {
	*x = GetByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByDateReq) ProtoMessage() {}

func (x *GetByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByDateReq.ProtoReflect.Descriptor instead.
func (*GetByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{6}
}

func (x *GetByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Info  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetByDateRes) Reset() {
	*x = GetByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByDateRes) ProtoMessage() {}

func (x *GetByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByDateRes.ProtoReflect.Descriptor instead.
func (*GetByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{7}
}

func (x *GetByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetByDateRes) GetData() *Info {
	if x != nil {
		return x.Data
	}
	return nil
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date            int64  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	QFriend         string `protobuf:"bytes,3,opt,name=QFriend,proto3" json:"QFriend,omitempty"`
	Color           string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Datetime        string `protobuf:"bytes,5,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Health          string `protobuf:"bytes,6,opt,name=health,proto3" json:"health,omitempty"`
	Love            string `protobuf:"bytes,7,opt,name=love,proto3" json:"love,omitempty"`
	Work            string `protobuf:"bytes,8,opt,name=work,proto3" json:"work,omitempty"`
	Money           string `protobuf:"bytes,9,opt,name=money,proto3" json:"money,omitempty"`
	Number          int64  `protobuf:"varint,10,opt,name=number,proto3" json:"number,omitempty"`
	Summary         string `protobuf:"bytes,11,opt,name=summary,proto3" json:"summary,omitempty"`
	All             string `protobuf:"bytes,12,opt,name=all,proto3" json:"all,omitempty"`
	Yi              string `protobuf:"bytes,13,opt,name=yi,proto3" json:"yi,omitempty"`
	Ji              string `protobuf:"bytes,14,opt,name=ji,proto3" json:"ji,omitempty"`
	TemplateContent string `protobuf:"bytes,15,opt,name=template_content,json=templateContent,proto3" json:"template_content,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{8}
}

func (x *Info) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Info) GetQFriend() string {
	if x != nil {
		return x.QFriend
	}
	return ""
}

func (x *Info) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Info) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *Info) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *Info) GetLove() string {
	if x != nil {
		return x.Love
	}
	return ""
}

func (x *Info) GetWork() string {
	if x != nil {
		return x.Work
	}
	return ""
}

func (x *Info) GetMoney() string {
	if x != nil {
		return x.Money
	}
	return ""
}

func (x *Info) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Info) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Info) GetAll() string {
	if x != nil {
		return x.All
	}
	return ""
}

func (x *Info) GetYi() string {
	if x != nil {
		return x.Yi
	}
	return ""
}

func (x *Info) GetJi() string {
	if x != nil {
		return x.Ji
	}
	return ""
}

func (x *Info) GetTemplateContent() string {
	if x != nil {
		return x.TemplateContent
	}
	return ""
}

//======================== 查询某周的运势 ========================
type GetWeekByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWeekByDateReq) Reset() {
	*x = GetWeekByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeekByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeekByDateReq) ProtoMessage() {}

func (x *GetWeekByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeekByDateReq.ProtoReflect.Descriptor instead.
func (*GetWeekByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{9}
}

func (x *GetWeekByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetWeekByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWeekByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *WeekInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWeekByDateRes) Reset() {
	*x = GetWeekByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeekByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeekByDateRes) ProtoMessage() {}

func (x *GetWeekByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeekByDateRes.ProtoReflect.Descriptor instead.
func (*GetWeekByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{10}
}

func (x *GetWeekByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetWeekByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetWeekByDateRes) GetData() *WeekInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type WeekInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weekth          int64  `protobuf:"varint,2,opt,name=weekth,proto3" json:"weekth,omitempty"`
	Date            string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Health          string `protobuf:"bytes,4,opt,name=health,proto3" json:"health,omitempty"`
	Job             string `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
	Love            string `protobuf:"bytes,6,opt,name=love,proto3" json:"love,omitempty"`
	Money           string `protobuf:"bytes,7,opt,name=money,proto3" json:"money,omitempty"`
	Work            string `protobuf:"bytes,8,opt,name=work,proto3" json:"work,omitempty"`
	TemplateContent string `protobuf:"bytes,9,opt,name=template_content,json=templateContent,proto3" json:"template_content,omitempty"`
}

func (x *WeekInfo) Reset() {
	*x = WeekInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeekInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeekInfo) ProtoMessage() {}

func (x *WeekInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeekInfo.ProtoReflect.Descriptor instead.
func (*WeekInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{11}
}

func (x *WeekInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WeekInfo) GetWeekth() int64 {
	if x != nil {
		return x.Weekth
	}
	return 0
}

func (x *WeekInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WeekInfo) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *WeekInfo) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *WeekInfo) GetLove() string {
	if x != nil {
		return x.Love
	}
	return ""
}

func (x *WeekInfo) GetMoney() string {
	if x != nil {
		return x.Money
	}
	return ""
}

func (x *WeekInfo) GetWork() string {
	if x != nil {
		return x.Work
	}
	return ""
}

func (x *WeekInfo) GetTemplateContent() string {
	if x != nil {
		return x.TemplateContent
	}
	return ""
}

type GetMonthByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetMonthByDateReq) Reset() {
	*x = GetMonthByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthByDateReq) ProtoMessage() {}

func (x *GetMonthByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthByDateReq.ProtoReflect.Descriptor instead.
func (*GetMonthByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{12}
}

func (x *GetMonthByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetMonthByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMonthByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MonthInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMonthByDateRes) Reset() {
	*x = GetMonthByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthByDateRes) ProtoMessage() {}

func (x *GetMonthByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthByDateRes.ProtoReflect.Descriptor instead.
func (*GetMonthByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{13}
}

func (x *GetMonthByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMonthByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMonthByDateRes) GetData() *MonthInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type MonthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date            string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Month           int64  `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Health          string `protobuf:"bytes,4,opt,name=health,proto3" json:"health,omitempty"`
	All             string `protobuf:"bytes,5,opt,name=all,proto3" json:"all,omitempty"`
	Love            string `protobuf:"bytes,6,opt,name=love,proto3" json:"love,omitempty"`
	Money           string `protobuf:"bytes,7,opt,name=money,proto3" json:"money,omitempty"`
	Work            string `protobuf:"bytes,8,opt,name=work,proto3" json:"work,omitempty"`
	HappyMagic      string `protobuf:"bytes,9,opt,name=happyMagic,proto3" json:"happyMagic,omitempty"`
	TemplateContent string `protobuf:"bytes,10,opt,name=template_content,json=templateContent,proto3" json:"template_content,omitempty"`
}

func (x *MonthInfo) Reset() {
	*x = MonthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthInfo) ProtoMessage() {}

func (x *MonthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthInfo.ProtoReflect.Descriptor instead.
func (*MonthInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{14}
}

func (x *MonthInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MonthInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MonthInfo) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *MonthInfo) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *MonthInfo) GetAll() string {
	if x != nil {
		return x.All
	}
	return ""
}

func (x *MonthInfo) GetLove() string {
	if x != nil {
		return x.Love
	}
	return ""
}

func (x *MonthInfo) GetMoney() string {
	if x != nil {
		return x.Money
	}
	return ""
}

func (x *MonthInfo) GetWork() string {
	if x != nil {
		return x.Work
	}
	return ""
}

func (x *MonthInfo) GetHappyMagic() string {
	if x != nil {
		return x.HappyMagic
	}
	return ""
}

func (x *MonthInfo) GetTemplateContent() string {
	if x != nil {
		return x.TemplateContent
	}
	return ""
}

type GetYearByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetYearByDateReq) Reset() {
	*x = GetYearByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYearByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYearByDateReq) ProtoMessage() {}

func (x *GetYearByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYearByDateReq.ProtoReflect.Descriptor instead.
func (*GetYearByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{15}
}

func (x *GetYearByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetYearByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetYearByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *YearInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetYearByDateRes) Reset() {
	*x = GetYearByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYearByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYearByDateRes) ProtoMessage() {}

func (x *GetYearByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYearByDateRes.ProtoReflect.Descriptor instead.
func (*GetYearByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{16}
}

func (x *GetYearByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetYearByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetYearByDateRes) GetData() *YearInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type YearInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Date            string        `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Year            int64         `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Mima            *YearMimaInfo `protobuf:"bytes,4,opt,name=mima,proto3" json:"mima,omitempty"`
	Career          []string      `protobuf:"bytes,5,rep,name=career,proto3" json:"career,omitempty"`
	Love            []string      `protobuf:"bytes,6,rep,name=love,proto3" json:"love,omitempty"`
	Health          []string      `protobuf:"bytes,7,rep,name=health,proto3" json:"health,omitempty"`
	Finance         []string      `protobuf:"bytes,8,rep,name=finance,proto3" json:"finance,omitempty"`
	LuckeyStone     string        `protobuf:"bytes,9,opt,name=luckey_stone,json=luckeyStone,proto3" json:"luckey_stone,omitempty"`
	Future          string        `protobuf:"bytes,10,opt,name=future,proto3" json:"future,omitempty"`
	TemplateContent string        `protobuf:"bytes,11,opt,name=template_content,json=templateContent,proto3" json:"template_content,omitempty"`
}

func (x *YearInfo) Reset() {
	*x = YearInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YearInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YearInfo) ProtoMessage() {}

func (x *YearInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YearInfo.ProtoReflect.Descriptor instead.
func (*YearInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{17}
}

func (x *YearInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *YearInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *YearInfo) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *YearInfo) GetMima() *YearMimaInfo {
	if x != nil {
		return x.Mima
	}
	return nil
}

func (x *YearInfo) GetCareer() []string {
	if x != nil {
		return x.Career
	}
	return nil
}

func (x *YearInfo) GetLove() []string {
	if x != nil {
		return x.Love
	}
	return nil
}

func (x *YearInfo) GetHealth() []string {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *YearInfo) GetFinance() []string {
	if x != nil {
		return x.Finance
	}
	return nil
}

func (x *YearInfo) GetLuckeyStone() string {
	if x != nil {
		return x.LuckeyStone
	}
	return ""
}

func (x *YearInfo) GetFuture() string {
	if x != nil {
		return x.Future
	}
	return ""
}

func (x *YearInfo) GetTemplateContent() string {
	if x != nil {
		return x.TemplateContent
	}
	return ""
}

type YearMimaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Text []string `protobuf:"bytes,2,rep,name=text,proto3" json:"text,omitempty"`
}

func (x *YearMimaInfo) Reset() {
	*x = YearMimaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YearMimaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YearMimaInfo) ProtoMessage() {}

func (x *YearMimaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YearMimaInfo.ProtoReflect.Descriptor instead.
func (*YearMimaInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{18}
}

func (x *YearMimaInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *YearMimaInfo) GetText() []string {
	if x != nil {
		return x.Text
	}
	return nil
}

//======================== 查询某日的运势图 ========================
type PicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaID string `protobuf:"bytes,1,opt,name=mediaID,proto3" json:"mediaID,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PicInfo) Reset() {
	*x = PicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicInfo) ProtoMessage() {}

func (x *PicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicInfo.ProtoReflect.Descriptor instead.
func (*PicInfo) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{19}
}

func (x *PicInfo) GetMediaID() string {
	if x != nil {
		return x.MediaID
	}
	return ""
}

func (x *PicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPicByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppCode     string                 `protobuf:"bytes,3,opt,name=app_code,json=appCode,proto3" json:"app_code,omitempty"`
	AccessToken string                 `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetPicByDateReq) Reset() {
	*x = GetPicByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPicByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPicByDateReq) ProtoMessage() {}

func (x *GetPicByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPicByDateReq.ProtoReflect.Descriptor instead.
func (*GetPicByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{20}
}

func (x *GetPicByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetPicByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPicByDateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *GetPicByDateReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetPicByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PicInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPicByDateRes) Reset() {
	*x = GetPicByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPicByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPicByDateRes) ProtoMessage() {}

func (x *GetPicByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPicByDateRes.ProtoReflect.Descriptor instead.
func (*GetPicByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{21}
}

func (x *GetPicByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPicByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPicByDateRes) GetData() *PicInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

//======================== 查询某周的运势图 ========================
type GetWeekPicByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppCode     string                 `protobuf:"bytes,3,opt,name=app_code,json=appCode,proto3" json:"app_code,omitempty"`
	AccessToken string                 `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetWeekPicByDateReq) Reset() {
	*x = GetWeekPicByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeekPicByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeekPicByDateReq) ProtoMessage() {}

func (x *GetWeekPicByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeekPicByDateReq.ProtoReflect.Descriptor instead.
func (*GetWeekPicByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{22}
}

func (x *GetWeekPicByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetWeekPicByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWeekPicByDateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *GetWeekPicByDateReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetWeekPicByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PicInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWeekPicByDateRes) Reset() {
	*x = GetWeekPicByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeekPicByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeekPicByDateRes) ProtoMessage() {}

func (x *GetWeekPicByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeekPicByDateRes.ProtoReflect.Descriptor instead.
func (*GetWeekPicByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{23}
}

func (x *GetWeekPicByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetWeekPicByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetWeekPicByDateRes) GetData() *PicInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

//======================== 查询某月的运势图 ========================
type GetMonthPicByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppCode     string                 `protobuf:"bytes,3,opt,name=app_code,json=appCode,proto3" json:"app_code,omitempty"`
	AccessToken string                 `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetMonthPicByDateReq) Reset() {
	*x = GetMonthPicByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthPicByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthPicByDateReq) ProtoMessage() {}

func (x *GetMonthPicByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthPicByDateReq.ProtoReflect.Descriptor instead.
func (*GetMonthPicByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{24}
}

func (x *GetMonthPicByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetMonthPicByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMonthPicByDateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *GetMonthPicByDateReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetMonthPicByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PicInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMonthPicByDateRes) Reset() {
	*x = GetMonthPicByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthPicByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthPicByDateRes) ProtoMessage() {}

func (x *GetMonthPicByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthPicByDateRes.ProtoReflect.Descriptor instead.
func (*GetMonthPicByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{25}
}

func (x *GetMonthPicByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMonthPicByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMonthPicByDateRes) GetData() *PicInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

//======================== 查询某年的运势图 ========================
type GetYearPicByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppCode     string                 `protobuf:"bytes,3,opt,name=app_code,json=appCode,proto3" json:"app_code,omitempty"`
	AccessToken string                 `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetYearPicByDateReq) Reset() {
	*x = GetYearPicByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYearPicByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYearPicByDateReq) ProtoMessage() {}

func (x *GetYearPicByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYearPicByDateReq.ProtoReflect.Descriptor instead.
func (*GetYearPicByDateReq) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{26}
}

func (x *GetYearPicByDateReq) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetYearPicByDateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetYearPicByDateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *GetYearPicByDateReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetYearPicByDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PicInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetYearPicByDateRes) Reset() {
	*x = GetYearPicByDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_constellation_constellation_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYearPicByDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYearPicByDateRes) ProtoMessage() {}

func (x *GetYearPicByDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_growth_constellation_constellation_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYearPicByDateRes.ProtoReflect.Descriptor instead.
func (*GetYearPicByDateRes) Descriptor() ([]byte, []int) {
	return file_growth_constellation_constellation_proto_rawDescGZIP(), []int{27}
}

func (x *GetYearPicByDateRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetYearPicByDateRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetYearPicByDateRes) GetData() *PicInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_growth_constellation_constellation_proto protoreflect.FileDescriptor

var file_growth_constellation_constellation_proto_rawDesc = []byte{
	0x0a, 0x28, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x99, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x50, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x50, 0x69, 0x63, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x58, 0x5a, 0x50, 0x44, 0x50, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x0b, 0x58,
	0x5a, 0x50, 0x44, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x58, 0x5a, 0x50, 0x44, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xda, 0x01, 0x0a, 0x08, 0x58, 0x5a, 0x50, 0x44,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x6d, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x6d, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x7a, 0x68, 0x69, 0x73, 0x68, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x68,
	0x69, 0x73, 0x68, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x78, 0x69, 0x61, 0x6e, 0x67, 0x79, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x78, 0x69, 0x61, 0x6e, 0x67, 0x79, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x63,
	0x64, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x63, 0x64, 0x6a, 0x12, 0x16,
	0x0a, 0x06, 0x6a, 0x69, 0x65, 0x67, 0x75, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6a, 0x69, 0x65, 0x67, 0x75, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x61, 0x6e, 0x61, 0x69,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x61, 0x6e, 0x61, 0x69, 0x12, 0x14,
	0x0a, 0x05, 0x7a, 0x68, 0x75, 0x79, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x7a,
	0x68, 0x75, 0x79, 0x69, 0x22, 0x52, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xdf, 0x02, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x51, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x51, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x69, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x79, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x69, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6a, 0x69, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x65, 0x6b, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x01, 0x0a, 0x08, 0x57, 0x65, 0x65,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x65,
	0x6b, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x65, 0x6b, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x6f, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x5f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xfc, 0x01, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x76, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x70, 0x70, 0x79, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x70, 0x70,
	0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x59, 0x65, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x59, 0x65, 0x61, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x02, 0x0a, 0x08, 0x59, 0x65, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x59, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x6d, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x76, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6c, 0x75, 0x63, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x75, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x75, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x36,
	0x0a, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x6d, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x93, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x50, 0x69,
	0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5f, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x98, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x50,
	0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xdb, 0x08, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65,
	0x6b, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4c,
	0x69, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x59, 0x65, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x59, 0x65, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x50,
	0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x65, 0x6b, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x57,
	0x65, 0x65, 0x6b, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12,
	0x7d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x69, 0x63, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x65,
	0x61, 0x72, 0x50, 0x69, 0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x50, 0x69,
	0x63, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x59, 0x65, 0x61, 0x72, 0x50, 0x69, 0x63,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x58, 0x5a, 0x50, 0x44, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x58, 0x5a, 0x50, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x52, 0x65, 0x73, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x3a, 0x01, 0x2a,
	0x12, 0x61, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x50, 0x69, 0x63, 0x12, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x50, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x58, 0x5a, 0x50, 0x44, 0x50, 0x69, 0x63, 0x52, 0x65, 0x73, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x58, 0x5a, 0x50, 0x44, 0x50, 0x69, 0x63,
	0x3a, 0x01, 0x2a, 0x42, 0x15, 0x5a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_growth_constellation_constellation_proto_rawDescOnce sync.Once
	file_growth_constellation_constellation_proto_rawDescData = file_growth_constellation_constellation_proto_rawDesc
)

func file_growth_constellation_constellation_proto_rawDescGZIP() []byte {
	file_growth_constellation_constellation_proto_rawDescOnce.Do(func() {
		file_growth_constellation_constellation_proto_rawDescData = protoimpl.X.CompressGZIP(file_growth_constellation_constellation_proto_rawDescData)
	})
	return file_growth_constellation_constellation_proto_rawDescData
}

var file_growth_constellation_constellation_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_growth_constellation_constellation_proto_goTypes = []interface{}{
	(*GetXZPDPicReq)(nil),         // 0: proto.GetXZPDPicReq
	(*GetXZPDPicRes)(nil),         // 1: proto.GetXZPDPicRes
	(*XZPDPicInfo)(nil),           // 2: proto.XZPDPicInfo
	(*GetXZPDReq)(nil),            // 3: proto.GetXZPDReq
	(*GetXZPDRes)(nil),            // 4: proto.GetXZPDRes
	(*XZPDInfo)(nil),              // 5: proto.XZPDInfo
	(*GetByDateReq)(nil),          // 6: proto.GetByDateReq
	(*GetByDateRes)(nil),          // 7: proto.GetByDateRes
	(*Info)(nil),                  // 8: proto.Info
	(*GetWeekByDateReq)(nil),      // 9: proto.GetWeekByDateReq
	(*GetWeekByDateRes)(nil),      // 10: proto.GetWeekByDateRes
	(*WeekInfo)(nil),              // 11: proto.WeekInfo
	(*GetMonthByDateReq)(nil),     // 12: proto.GetMonthByDateReq
	(*GetMonthByDateRes)(nil),     // 13: proto.GetMonthByDateRes
	(*MonthInfo)(nil),             // 14: proto.MonthInfo
	(*GetYearByDateReq)(nil),      // 15: proto.GetYearByDateReq
	(*GetYearByDateRes)(nil),      // 16: proto.GetYearByDateRes
	(*YearInfo)(nil),              // 17: proto.YearInfo
	(*YearMimaInfo)(nil),          // 18: proto.YearMimaInfo
	(*PicInfo)(nil),               // 19: proto.PicInfo
	(*GetPicByDateReq)(nil),       // 20: proto.GetPicByDateReq
	(*GetPicByDateRes)(nil),       // 21: proto.GetPicByDateRes
	(*GetWeekPicByDateReq)(nil),   // 22: proto.GetWeekPicByDateReq
	(*GetWeekPicByDateRes)(nil),   // 23: proto.GetWeekPicByDateRes
	(*GetMonthPicByDateReq)(nil),  // 24: proto.GetMonthPicByDateReq
	(*GetMonthPicByDateRes)(nil),  // 25: proto.GetMonthPicByDateRes
	(*GetYearPicByDateReq)(nil),   // 26: proto.GetYearPicByDateReq
	(*GetYearPicByDateRes)(nil),   // 27: proto.GetYearPicByDateRes
	(*timestamppb.Timestamp)(nil), // 28: google.protobuf.Timestamp
}
var file_growth_constellation_constellation_proto_depIdxs = []int32{
	2,  // 0: proto.GetXZPDPicRes.data:type_name -> proto.XZPDPicInfo
	5,  // 1: proto.GetXZPDRes.data:type_name -> proto.XZPDInfo
	28, // 2: proto.GetByDateReq.date:type_name -> google.protobuf.Timestamp
	8,  // 3: proto.GetByDateRes.data:type_name -> proto.Info
	28, // 4: proto.GetWeekByDateReq.date:type_name -> google.protobuf.Timestamp
	11, // 5: proto.GetWeekByDateRes.data:type_name -> proto.WeekInfo
	28, // 6: proto.GetMonthByDateReq.date:type_name -> google.protobuf.Timestamp
	14, // 7: proto.GetMonthByDateRes.data:type_name -> proto.MonthInfo
	28, // 8: proto.GetYearByDateReq.date:type_name -> google.protobuf.Timestamp
	17, // 9: proto.GetYearByDateRes.data:type_name -> proto.YearInfo
	18, // 10: proto.YearInfo.mima:type_name -> proto.YearMimaInfo
	28, // 11: proto.GetPicByDateReq.date:type_name -> google.protobuf.Timestamp
	19, // 12: proto.GetPicByDateRes.data:type_name -> proto.PicInfo
	28, // 13: proto.GetWeekPicByDateReq.date:type_name -> google.protobuf.Timestamp
	19, // 14: proto.GetWeekPicByDateRes.data:type_name -> proto.PicInfo
	28, // 15: proto.GetMonthPicByDateReq.date:type_name -> google.protobuf.Timestamp
	19, // 16: proto.GetMonthPicByDateRes.data:type_name -> proto.PicInfo
	28, // 17: proto.GetYearPicByDateReq.date:type_name -> google.protobuf.Timestamp
	19, // 18: proto.GetYearPicByDateRes.data:type_name -> proto.PicInfo
	6,  // 19: proto.Constellation.GetByDate:input_type -> proto.GetByDateReq
	9,  // 20: proto.Constellation.GetWeekByDate:input_type -> proto.GetWeekByDateReq
	12, // 21: proto.Constellation.GetMonthByDate:input_type -> proto.GetMonthByDateReq
	15, // 22: proto.Constellation.GetYearByDate:input_type -> proto.GetYearByDateReq
	20, // 23: proto.Constellation.GetPicByDate:input_type -> proto.GetPicByDateReq
	22, // 24: proto.Constellation.GetWeekPicByDate:input_type -> proto.GetWeekPicByDateReq
	24, // 25: proto.Constellation.GetMonthPicByDate:input_type -> proto.GetMonthPicByDateReq
	26, // 26: proto.Constellation.GetYearPicByDate:input_type -> proto.GetYearPicByDateReq
	3,  // 27: proto.Constellation.GetXZPD:input_type -> proto.GetXZPDReq
	0,  // 28: proto.Constellation.GetXZPDPic:input_type -> proto.GetXZPDPicReq
	7,  // 29: proto.Constellation.GetByDate:output_type -> proto.GetByDateRes
	10, // 30: proto.Constellation.GetWeekByDate:output_type -> proto.GetWeekByDateRes
	13, // 31: proto.Constellation.GetMonthByDate:output_type -> proto.GetMonthByDateRes
	16, // 32: proto.Constellation.GetYearByDate:output_type -> proto.GetYearByDateRes
	21, // 33: proto.Constellation.GetPicByDate:output_type -> proto.GetPicByDateRes
	23, // 34: proto.Constellation.GetWeekPicByDate:output_type -> proto.GetWeekPicByDateRes
	25, // 35: proto.Constellation.GetMonthPicByDate:output_type -> proto.GetMonthPicByDateRes
	27, // 36: proto.Constellation.GetYearPicByDate:output_type -> proto.GetYearPicByDateRes
	4,  // 37: proto.Constellation.GetXZPD:output_type -> proto.GetXZPDRes
	1,  // 38: proto.Constellation.GetXZPDPic:output_type -> proto.GetXZPDPicRes
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_growth_constellation_constellation_proto_init() }
func file_growth_constellation_constellation_proto_init() {
	if File_growth_constellation_constellation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_growth_constellation_constellation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetXZPDPicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetXZPDPicRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XZPDPicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetXZPDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetXZPDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XZPDInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeekByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeekByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeekInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYearByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYearByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YearInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YearMimaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPicByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPicByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeekPicByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeekPicByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthPicByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthPicByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYearPicByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_constellation_constellation_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYearPicByDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_growth_constellation_constellation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_growth_constellation_constellation_proto_goTypes,
		DependencyIndexes: file_growth_constellation_constellation_proto_depIdxs,
		MessageInfos:      file_growth_constellation_constellation_proto_msgTypes,
	}.Build()
	File_growth_constellation_constellation_proto = out.File
	file_growth_constellation_constellation_proto_rawDesc = nil
	file_growth_constellation_constellation_proto_goTypes = nil
	file_growth_constellation_constellation_proto_depIdxs = nil
}
