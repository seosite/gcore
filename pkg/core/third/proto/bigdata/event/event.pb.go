// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: bigdata/event/event.proto

package bigdata_event

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *Common  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Events []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventRequest) Reset() {
	*x = EventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigdata_event_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequest) ProtoMessage() {}

func (x *EventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bigdata_event_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequest.ProtoReflect.Descriptor instead.
func (*EventRequest) Descriptor() ([]byte, []int) {
	return file_bigdata_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventRequest) GetCommon() *Common {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *EventRequest) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigdata_event_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bigdata_event_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_bigdata_event_event_proto_rawDescGZIP(), []int{1}
}

type Common struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P          int32  `protobuf:"varint,1,opt,name=p,proto3" json:"p,omitempty"`                                     // [Required] 所属平台：0=未知,1=wx_mini,微信小程序,2=wx_open,微信公众号,3=h5,手机浏览器,4=pc,5=app,6=快应用
	Ver        string `protobuf:"bytes,2,opt,name=ver,proto3" json:"ver,omitempty"`                                  // [Required] 应用版本号
	Imei       string `protobuf:"bytes,3,opt,name=imei,proto3" json:"imei,omitempty"`                                // [Optional] Android设备唯一标识符
	Mac        string `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`                                  // [Optional] 如果无法获取IMEI，可以使用mac地址作为用户唯一标识
	Idfa       string `protobuf:"bytes,5,opt,name=idfa,proto3" json:"idfa,omitempty"`                                // [Optional] iOS设备唯一标识符
	Device     string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`                            // [Optional] 设备型号
	Brand      string `protobuf:"bytes,7,opt,name=brand,proto3" json:"brand,omitempty"`                              // [Optional] 设备品牌
	Os         string `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`                                    // [Optional] 系统版本
	Screen     string `protobuf:"bytes,9,opt,name=screen,proto3" json:"screen,omitempty"`                            // [Optional] 屏幕信息：宽x高x设备像素比x方向
	Carrier    string `protobuf:"bytes,10,opt,name=carrier,proto3" json:"carrier,omitempty"`                         // [Optional] 运营商
	Net        string `protobuf:"bytes,11,opt,name=net,proto3" json:"net,omitempty"`                                 // [Optional] 网络状态：0=未知,1=无网络,2=wifi,3=wwan,4=2g,5=3g,6=4g
	Market     string `protobuf:"bytes,12,opt,name=market,proto3" json:"market,omitempty"`                           // [Optional] 应用市场名称
	Tz         string `protobuf:"bytes,13,opt,name=tz,proto3" json:"tz,omitempty"`                                   // [Optional] 时区：比如:8,-4，默认东八区
	Lang       string `protobuf:"bytes,14,opt,name=lang,proto3" json:"lang,omitempty"`                               // [Optional] 语言
	VerP       string `protobuf:"bytes,15,opt,name=ver_p,json=verP,proto3" json:"ver_p,omitempty"`                   // [Optional] 平台版本platform_version，比如微信版本号
	AuthNotify string `protobuf:"bytes,16,opt,name=auth_notify,json=authNotify,proto3" json:"auth_notify,omitempty"` // [Optional] 是否有推送权限：0=没有开启,1=开启
	V1         string `protobuf:"bytes,17,opt,name=v1,proto3" json:"v1,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V2         string `protobuf:"bytes,18,opt,name=v2,proto3" json:"v2,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V3         string `protobuf:"bytes,19,opt,name=v3,proto3" json:"v3,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V4         string `protobuf:"bytes,20,opt,name=v4,proto3" json:"v4,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V5         string `protobuf:"bytes,21,opt,name=v5,proto3" json:"v5,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V6         string `protobuf:"bytes,22,opt,name=v6,proto3" json:"v6,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V7         string `protobuf:"bytes,23,opt,name=v7,proto3" json:"v7,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V8         string `protobuf:"bytes,24,opt,name=v8,proto3" json:"v8,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V9         string `protobuf:"bytes,25,opt,name=v9,proto3" json:"v9,omitempty"`                                   // [Optional] 公共预留字段，以便后续增加字段
	V10        string `protobuf:"bytes,26,opt,name=v10,proto3" json:"v10,omitempty"`                                 // [Optional] 公共预留字段，以便后续增加字段
}

func (x *Common) Reset() {
	*x = Common{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigdata_event_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common) ProtoMessage() {}

func (x *Common) ProtoReflect() protoreflect.Message {
	mi := &file_bigdata_event_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common.ProtoReflect.Descriptor instead.
func (*Common) Descriptor() ([]byte, []int) {
	return file_bigdata_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *Common) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *Common) GetVer() string {
	if x != nil {
		return x.Ver
	}
	return ""
}

func (x *Common) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *Common) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Common) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *Common) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Common) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Common) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Common) GetScreen() string {
	if x != nil {
		return x.Screen
	}
	return ""
}

func (x *Common) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *Common) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *Common) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Common) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

func (x *Common) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Common) GetVerP() string {
	if x != nil {
		return x.VerP
	}
	return ""
}

func (x *Common) GetAuthNotify() string {
	if x != nil {
		return x.AuthNotify
	}
	return ""
}

func (x *Common) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *Common) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *Common) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *Common) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *Common) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

func (x *Common) GetV6() string {
	if x != nil {
		return x.V6
	}
	return ""
}

func (x *Common) GetV7() string {
	if x != nil {
		return x.V7
	}
	return ""
}

func (x *Common) GetV8() string {
	if x != nil {
		return x.V8
	}
	return ""
}

func (x *Common) GetV9() string {
	if x != nil {
		return x.V9
	}
	return ""
}

func (x *Common) GetV10() string {
	if x != nil {
		return x.V10
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Et      int32             `protobuf:"varint,1,opt,name=et,proto3" json:"et,omitempty"`                                                                                                  // [Required] 事件类型
	Payload map[string]string `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // [Required] 使用map以便扩展
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigdata_event_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_bigdata_event_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_bigdata_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetEt() int32 {
	if x != nil {
		return x.Et
	}
	return 0
}

func (x *Event) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Event.payload 的已定义字段，供打点参考
type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App         string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`                                     // [Required] app名字
	Env         string `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`                                     // [Optional] 所属环境：默认线上环境；test=测试环境
	Eid         string `protobuf:"bytes,3,opt,name=eid,proto3" json:"eid,omitempty"`                                     // [Required] 事件id
	SrcEid      string `protobuf:"bytes,4,opt,name=src_eid,json=srcEid,proto3" json:"src_eid,omitempty"`                 // [Optional] 来源事件id：用于和当前事件串联
	Ch          string `protobuf:"bytes,5,opt,name=ch,proto3" json:"ch,omitempty"`                                       // [Optional] 投放渠道id：比如 60001、90001，信息在 `bingtang-all.tb_channel`
	Bid         string `protobuf:"bytes,6,opt,name=bid,proto3" json:"bid,omitempty"`                                     // [Optional] 书本id(book_id)
	Chid        string `protobuf:"bytes,7,opt,name=chid,proto3" json:"chid,omitempty"`                                   // [Optional] 章节id(chapter_id)
	Ts          string `protobuf:"bytes,8,opt,name=ts,proto3" json:"ts,omitempty"`                                       // [Required] 事件发生时间戳：timestamp，精确到毫秒
	Sid         string `protobuf:"bytes,9,opt,name=sid,proto3" json:"sid,omitempty"`                                     // [Optional] 会话id(session_id)
	Sn          string `protobuf:"bytes,10,opt,name=sn,proto3" json:"sn,omitempty"`                                      // [Optional] 序列号：同一个session内，每条日志都有sn，从0开始递增，直到session发生变化
	Uid         string `protobuf:"bytes,11,opt,name=uid,proto3" json:"uid,omitempty"`                                    // [Required] 用户id
	Openid      string `protobuf:"bytes,12,opt,name=openid,proto3" json:"openid,omitempty"`                              // [Optional] 微信openid
	Pos         string `protobuf:"bytes,13,opt,name=pos,proto3" json:"pos,omitempty"`                                    // [Optional] 位置编号，用以区分同一板块下的多个组件，从0开始
	Eval        string `protobuf:"bytes,14,opt,name=eval,proto3" json:"eval,omitempty"`                                  // [Optional] 事件值，用以区分同一板块下的多个组件
	Url         string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`                                    // [Optional] 跳转链接：点击事件跳转到外部链接时必填
	UtmSource   string `protobuf:"bytes,16,opt,name=utm_source,json=utmSource,proto3" json:"utm_source,omitempty"`       // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmMedium   string `protobuf:"bytes,17,opt,name=utm_medium,json=utmMedium,proto3" json:"utm_medium,omitempty"`       // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmCampaign string `protobuf:"bytes,18,opt,name=utm_campaign,json=utmCampaign,proto3" json:"utm_campaign,omitempty"` // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmContent  string `protobuf:"bytes,19,opt,name=utm_content,json=utmContent,proto3" json:"utm_content,omitempty"`    // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmTerm     string `protobuf:"bytes,20,opt,name=utm_term,json=utmTerm,proto3" json:"utm_term,omitempty"`             // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	Issue       string `protobuf:"bytes,21,opt,name=issue,proto3" json:"issue,omitempty"`                                // [Optional] 异常信息：异常情况上报时，提供有用的错误信息
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigdata_event_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_bigdata_event_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_bigdata_event_event_proto_rawDescGZIP(), []int{4}
}

func (x *Payload) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *Payload) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Payload) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *Payload) GetSrcEid() string {
	if x != nil {
		return x.SrcEid
	}
	return ""
}

func (x *Payload) GetCh() string {
	if x != nil {
		return x.Ch
	}
	return ""
}

func (x *Payload) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Payload) GetChid() string {
	if x != nil {
		return x.Chid
	}
	return ""
}

func (x *Payload) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *Payload) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *Payload) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *Payload) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Payload) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *Payload) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *Payload) GetEval() string {
	if x != nil {
		return x.Eval
	}
	return ""
}

func (x *Payload) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Payload) GetUtmSource() string {
	if x != nil {
		return x.UtmSource
	}
	return ""
}

func (x *Payload) GetUtmMedium() string {
	if x != nil {
		return x.UtmMedium
	}
	return ""
}

func (x *Payload) GetUtmCampaign() string {
	if x != nil {
		return x.UtmCampaign
	}
	return ""
}

func (x *Payload) GetUtmContent() string {
	if x != nil {
		return x.UtmContent
	}
	return ""
}

func (x *Payload) GetUtmTerm() string {
	if x != nil {
		return x.UtmTerm
	}
	return ""
}

func (x *Payload) GetIssue() string {
	if x != nil {
		return x.Issue
	}
	return ""
}

// 仅供归档使用，字段冗余，分别取自 Common + Event + payload
type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P           int32             `protobuf:"varint,1,opt,name=p,proto3" json:"p,omitempty"`                                                                                                   // [Required] 所属平台：0=未知,1=wx_mini,微信小程序,2=wx_open,微信公众号,3=h5,手机浏览器,4=pc,5=app,6=快应用
	Ver         string            `protobuf:"bytes,2,opt,name=ver,proto3" json:"ver,omitempty"`                                                                                                // [Required] 应用版本号
	Imei        string            `protobuf:"bytes,3,opt,name=imei,proto3" json:"imei,omitempty"`                                                                                              // [Optional] Android设备唯一标识符
	Mac         string            `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`                                                                                                // [Optional] 如果无法获取IMEI，可以使用mac地址作为用户唯一标识
	Idfa        string            `protobuf:"bytes,5,opt,name=idfa,proto3" json:"idfa,omitempty"`                                                                                              // [Optional] iOS设备唯一标识符
	Device      string            `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`                                                                                          // [Optional] 设备型号
	Brand       string            `protobuf:"bytes,7,opt,name=brand,proto3" json:"brand,omitempty"`                                                                                            // [Optional] 设备品牌
	Os          string            `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`                                                                                                  // [Optional] 系统版本
	Screen      string            `protobuf:"bytes,9,opt,name=screen,proto3" json:"screen,omitempty"`                                                                                          // [Optional] 屏幕信息：宽x高x设备像素比x方向
	Carrier     string            `protobuf:"bytes,10,opt,name=carrier,proto3" json:"carrier,omitempty"`                                                                                       // [Optional] 运营商
	Net         string            `protobuf:"bytes,11,opt,name=net,proto3" json:"net,omitempty"`                                                                                               // [Optional] 网络状态：0=未知,1=无网络,2=wifi,3=wwan,4=2g,5=3g,6=4g
	Market      string            `protobuf:"bytes,12,opt,name=market,proto3" json:"market,omitempty"`                                                                                         // [Optional] 应用市场名称
	Tz          string            `protobuf:"bytes,13,opt,name=tz,proto3" json:"tz,omitempty"`                                                                                                 // [Optional] 时区：比如:8,-4，默认东八区
	Lang        string            `protobuf:"bytes,14,opt,name=lang,proto3" json:"lang,omitempty"`                                                                                             // [Optional] 语言
	VerP        string            `protobuf:"bytes,15,opt,name=ver_p,json=verP,proto3" json:"ver_p,omitempty"`                                                                                 // [Optional] 平台版本platform_version，比如微信版本号
	AuthNotify  string            `protobuf:"bytes,16,opt,name=auth_notify,json=authNotify,proto3" json:"auth_notify,omitempty"`                                                               // [Optional] 是否有推送权限：0=没有开启,1=开启
	V1          string            `protobuf:"bytes,17,opt,name=v1,proto3" json:"v1,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V2          string            `protobuf:"bytes,18,opt,name=v2,proto3" json:"v2,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V3          string            `protobuf:"bytes,19,opt,name=v3,proto3" json:"v3,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V4          string            `protobuf:"bytes,20,opt,name=v4,proto3" json:"v4,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V5          string            `protobuf:"bytes,21,opt,name=v5,proto3" json:"v5,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V6          string            `protobuf:"bytes,22,opt,name=v6,proto3" json:"v6,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V7          string            `protobuf:"bytes,23,opt,name=v7,proto3" json:"v7,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V8          string            `protobuf:"bytes,24,opt,name=v8,proto3" json:"v8,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V9          string            `protobuf:"bytes,25,opt,name=v9,proto3" json:"v9,omitempty"`                                                                                                 // [Optional] 公共预留字段，以便后续增加字段
	V10         string            `protobuf:"bytes,26,opt,name=v10,proto3" json:"v10,omitempty"`                                                                                               // [Optional] 公共预留字段，以便后续增加字段
	Et          int32             `protobuf:"varint,27,opt,name=et,proto3" json:"et,omitempty"`                                                                                                // [Required] 事件类型
	App         string            `protobuf:"bytes,28,opt,name=app,proto3" json:"app,omitempty"`                                                                                               // [Required] app名字
	Env         string            `protobuf:"bytes,29,opt,name=env,proto3" json:"env,omitempty"`                                                                                               // [Optional] 所属环境：默认线上环境；test=测试环境
	Eid         string            `protobuf:"bytes,30,opt,name=eid,proto3" json:"eid,omitempty"`                                                                                               // [Required] 事件id
	SrcEid      string            `protobuf:"bytes,31,opt,name=src_eid,json=srcEid,proto3" json:"src_eid,omitempty"`                                                                           // [Optional] 来源事件id：用于和当前事件串联
	Ch          string            `protobuf:"bytes,32,opt,name=ch,proto3" json:"ch,omitempty"`                                                                                                 // [Optional] 投放渠道id：比如 60001、90001，信息在 `bingtang-all.tb_channel`
	Bid         string            `protobuf:"bytes,33,opt,name=bid,proto3" json:"bid,omitempty"`                                                                                               // [Optional] 书本id(book_id)
	Chid        string            `protobuf:"bytes,34,opt,name=chid,proto3" json:"chid,omitempty"`                                                                                             // [Optional] 章节id(chapter_id)
	Ts          string            `protobuf:"bytes,35,opt,name=ts,proto3" json:"ts,omitempty"`                                                                                                 // [Required] 事件发生时间戳：timestamp，精确到毫秒
	Sid         string            `protobuf:"bytes,36,opt,name=sid,proto3" json:"sid,omitempty"`                                                                                               // [Optional] 会话id(session_id)
	Sn          string            `protobuf:"bytes,37,opt,name=sn,proto3" json:"sn,omitempty"`                                                                                                 // [Optional] 序列号：同一个session内，每条日志都有sn，从0开始递增，直到session发生变化
	Uid         string            `protobuf:"bytes,38,opt,name=uid,proto3" json:"uid,omitempty"`                                                                                               // [Required] 用户id
	Openid      string            `protobuf:"bytes,39,opt,name=openid,proto3" json:"openid,omitempty"`                                                                                         // [Optional] 微信openid
	Pos         string            `protobuf:"bytes,40,opt,name=pos,proto3" json:"pos,omitempty"`                                                                                               // [Optional] 位置编号，用以区分同一板块下的多个组件，从0开始
	Eval        string            `protobuf:"bytes,41,opt,name=eval,proto3" json:"eval,omitempty"`                                                                                             // [Optional] 事件值，用以区分同一板块下的多个组件，
	Url         string            `protobuf:"bytes,42,opt,name=url,proto3" json:"url,omitempty"`                                                                                               // [Optional] 跳转链接：点击事件跳转到外部链接时必填
	UtmSource   string            `protobuf:"bytes,43,opt,name=utm_source,json=utmSource,proto3" json:"utm_source,omitempty"`                                                                  // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmMedium   string            `protobuf:"bytes,44,opt,name=utm_medium,json=utmMedium,proto3" json:"utm_medium,omitempty"`                                                                  // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmCampaign string            `protobuf:"bytes,45,opt,name=utm_campaign,json=utmCampaign,proto3" json:"utm_campaign,omitempty"`                                                            // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmContent  string            `protobuf:"bytes,46,opt,name=utm_content,json=utmContent,proto3" json:"utm_content,omitempty"`                                                               // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	UtmTerm     string            `protobuf:"bytes,47,opt,name=utm_term,json=utmTerm,proto3" json:"utm_term,omitempty"`                                                                        // [Optional] UTM参数，用于追踪流量来源，仅在着陆页使用
	Issue       string            `protobuf:"bytes,48,opt,name=issue,proto3" json:"issue,omitempty"`                                                                                           // [Optional] 异常信息：异常情况上报时，提供有用的错误信息
	TsServer    string            `protobuf:"bytes,49,opt,name=ts_server,json=tsServer,proto3" json:"ts_server,omitempty"`                                                                     // [Optional] 服务器添加：服务器接收到的时间戳，精度到毫秒。
	Ip          string            `protobuf:"bytes,50,opt,name=ip,proto3" json:"ip,omitempty"`                                                                                                 // [Optional] 服务端添加：用户ip
	Ua          string            `protobuf:"bytes,51,opt,name=ua,proto3" json:"ua,omitempty"`                                                                                                 // [Optional] 服务端添加：User-agent
	Referer     string            `protobuf:"bytes,52,opt,name=referer,proto3" json:"referer,omitempty"`                                                                                       // [Optional] 服务端添加：来源链接
	Params      map[string]string `protobuf:"bytes,53,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // [Required] 使用map以便扩展
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigdata_event_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_bigdata_event_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_bigdata_event_event_proto_rawDescGZIP(), []int{5}
}

func (x *Record) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *Record) GetVer() string {
	if x != nil {
		return x.Ver
	}
	return ""
}

func (x *Record) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *Record) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Record) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *Record) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Record) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Record) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Record) GetScreen() string {
	if x != nil {
		return x.Screen
	}
	return ""
}

func (x *Record) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *Record) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *Record) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Record) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

func (x *Record) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Record) GetVerP() string {
	if x != nil {
		return x.VerP
	}
	return ""
}

func (x *Record) GetAuthNotify() string {
	if x != nil {
		return x.AuthNotify
	}
	return ""
}

func (x *Record) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *Record) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *Record) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *Record) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *Record) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

func (x *Record) GetV6() string {
	if x != nil {
		return x.V6
	}
	return ""
}

func (x *Record) GetV7() string {
	if x != nil {
		return x.V7
	}
	return ""
}

func (x *Record) GetV8() string {
	if x != nil {
		return x.V8
	}
	return ""
}

func (x *Record) GetV9() string {
	if x != nil {
		return x.V9
	}
	return ""
}

func (x *Record) GetV10() string {
	if x != nil {
		return x.V10
	}
	return ""
}

func (x *Record) GetEt() int32 {
	if x != nil {
		return x.Et
	}
	return 0
}

func (x *Record) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *Record) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Record) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *Record) GetSrcEid() string {
	if x != nil {
		return x.SrcEid
	}
	return ""
}

func (x *Record) GetCh() string {
	if x != nil {
		return x.Ch
	}
	return ""
}

func (x *Record) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Record) GetChid() string {
	if x != nil {
		return x.Chid
	}
	return ""
}

func (x *Record) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *Record) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *Record) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *Record) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Record) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *Record) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *Record) GetEval() string {
	if x != nil {
		return x.Eval
	}
	return ""
}

func (x *Record) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Record) GetUtmSource() string {
	if x != nil {
		return x.UtmSource
	}
	return ""
}

func (x *Record) GetUtmMedium() string {
	if x != nil {
		return x.UtmMedium
	}
	return ""
}

func (x *Record) GetUtmCampaign() string {
	if x != nil {
		return x.UtmCampaign
	}
	return ""
}

func (x *Record) GetUtmContent() string {
	if x != nil {
		return x.UtmContent
	}
	return ""
}

func (x *Record) GetUtmTerm() string {
	if x != nil {
		return x.UtmTerm
	}
	return ""
}

func (x *Record) GetIssue() string {
	if x != nil {
		return x.Issue
	}
	return ""
}

func (x *Record) GetTsServer() string {
	if x != nil {
		return x.TsServer
	}
	return ""
}

func (x *Record) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Record) GetUa() string {
	if x != nil {
		return x.Ua
	}
	return ""
}

func (x *Record) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *Record) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_bigdata_event_event_proto protoreflect.FileDescriptor

var file_bigdata_event_event_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x69, 0x67,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x0c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf8, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x7a, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x7a, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x05, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x65, 0x72, 0x50,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x31, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x32, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x33, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x33, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x34, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x34, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x35, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x35, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x36, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x36, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x37, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x37, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x38, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x38, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x39, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x39, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x31, 0x30, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x31, 0x30, 0x22, 0x90, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x65, 0x74, 0x12, 0x3b, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x62, 0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd5, 0x03, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f,
	0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x72, 0x63, 0x45, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x68, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x74, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x74,
	0x6d, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x74, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x74, 0x6d,
	0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x74, 0x6d, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x74, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x74, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x74, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x74, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x22, 0xa1,
	0x09, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x64, 0x66, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x7a, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x7a, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x13, 0x0a, 0x05, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x76, 0x65, 0x72, 0x50, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x33, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x34, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x35, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x35, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x36, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x36, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x37, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x37, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x38, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x38, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x39, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x39, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x31, 0x30, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x31, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x74, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x76, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x65, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x72, 0x63, 0x45, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x68, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68,
	0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x65, 0x76, 0x61, 0x6c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x76, 0x61, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x74, 0x6d, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x74, 0x6d, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x74, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x74, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x61, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x75, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x35, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0x55, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x62,
	0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x67, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x62, 0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bigdata_event_event_proto_rawDescOnce sync.Once
	file_bigdata_event_event_proto_rawDescData = file_bigdata_event_event_proto_rawDesc
)

func file_bigdata_event_event_proto_rawDescGZIP() []byte {
	file_bigdata_event_event_proto_rawDescOnce.Do(func() {
		file_bigdata_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_bigdata_event_event_proto_rawDescData)
	})
	return file_bigdata_event_event_proto_rawDescData
}

var file_bigdata_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bigdata_event_event_proto_goTypes = []interface{}{
	(*EventRequest)(nil),  // 0: bigdata_event.EventRequest
	(*EventResponse)(nil), // 1: bigdata_event.EventResponse
	(*Common)(nil),        // 2: bigdata_event.Common
	(*Event)(nil),         // 3: bigdata_event.Event
	(*Payload)(nil),       // 4: bigdata_event.Payload
	(*Record)(nil),        // 5: bigdata_event.Record
	nil,                   // 6: bigdata_event.Event.PayloadEntry
	nil,                   // 7: bigdata_event.Record.ParamsEntry
}
var file_bigdata_event_event_proto_depIdxs = []int32{
	2, // 0: bigdata_event.EventRequest.common:type_name -> bigdata_event.Common
	3, // 1: bigdata_event.EventRequest.events:type_name -> bigdata_event.Event
	6, // 2: bigdata_event.Event.payload:type_name -> bigdata_event.Event.PayloadEntry
	7, // 3: bigdata_event.Record.params:type_name -> bigdata_event.Record.ParamsEntry
	0, // 4: bigdata_event.EventService.Upload:input_type -> bigdata_event.EventRequest
	1, // 5: bigdata_event.EventService.Upload:output_type -> bigdata_event.EventResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bigdata_event_event_proto_init() }
func file_bigdata_event_event_proto_init() {
	if File_bigdata_event_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bigdata_event_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigdata_event_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigdata_event_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigdata_event_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigdata_event_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigdata_event_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bigdata_event_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bigdata_event_event_proto_goTypes,
		DependencyIndexes: file_bigdata_event_event_proto_depIdxs,
		MessageInfos:      file_bigdata_event_event_proto_msgTypes,
	}.Build()
	File_bigdata_event_event_proto = out.File
	file_bigdata_event_event_proto_rawDesc = nil
	file_bigdata_event_event_proto_goTypes = nil
	file_bigdata_event_event_proto_depIdxs = nil
}
